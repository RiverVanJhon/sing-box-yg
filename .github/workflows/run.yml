name: Keep Servers Alive

on:
  schedule:
   #- cron: '0 */11 * * *' # 定间隔运行，每11小时执行一次
   #- cron: '0 18 * * *' # 定时运行，UTC时间下午6点，即北京时间凌晨2点
  workflow_dispatch: 
  
jobs:
  keep_servers_alive:
    runs-on: ubuntu-latest
    env:
      ACCOUNTS: ${{ secrets.ACCOUNTS }}  # ACCOUNTS是从GitHub Secrets中读取的
      isres: '["n", "n"]'  # 是否重置安装，与ACCOUNTS的数量一致
      isshow: 'n'  # 添加isshow，是否打印输出结果

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass curl jq

      - name: Process each account
        run: |
          count=0  
          ISRES=($(echo "$isres" | jq -r '.[]'))
          ISSHOW="$isshow"  # 将isshow赋值给ISSHOW变量，以便后续使用

          # 定义run_remote_command函数
          run_remote_command() {
            local RES=$1
            local SSH_USER=$2
            local SSH_PASS=$3
            local REALITY=${4}
            local SUUID=$5
            local TCP1_PORT=$6
            local TCP2_PORT=$7
            local UDP_PORT=$8
            local HOST=$9
            local ARGO_DOMAIN=${10}
            local ARGO_AUTH=${11}

            if [ -z "${ARGO_DOMAIN}" ]; then
              echo "Argo域名为空，申请Argo临时域名"
            else
              #敏感信息
              echo "Argo已设置固定域名：${ARGO_DOMAIN}"
            fi

            remote_command="export reym=$REALITY UUID=$SUUID vless_port=$TCP1_PORT vmess_port=$TCP2_PORT hy2_port=$UDP_port reset=$RES ARGO_DOMAIN=${ARGO_DOMAIN} ARGO_AUTH=${ARGO_AUTH} && bash <(curl -Ls https://raw.githubusercontent.com/yonggekkk/sing-box-yg/main/serv00keep.sh)"
            #敏感信息
            echo "Executing remote command on $HOST as $SSH_USER with command: $remote_command"
            sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no "$SSH_USER@$HOST" "$remote_command"
          }

          # 版权声明
          echo "*****************************************************"
          echo "*****************************************************"
          echo "甬哥Github项目  ：github.com/yonggekkk"
          echo "甬哥Blogger博客 ：ygkkk.blogspot.com"
          echo "甬哥YouTube频道 ：www.youtube.com/@ygkkk"
          echo "自动远程部署并保活Serv00三合一协议脚本【Github】"
          echo "版本：V25.1.22"
          echo "*****************************************************"
          echo "*****************************************************"

          for account in $(echo "${ACCOUNTS}" | jq -c '.[]'); do
            count=$((count+1))
            RES=${ISRES[$((count-1))]}  # 根据索引从isres数组中获取RES值
            SSH_USER=$(echo $account | jq -r '.SSH_USER')
            SSH_PASS=$(echo $account | jq -r '.SSH_PASS')
            REALITY=$(echo $account | jq -r '.REALITY')
            SUUID=$(echo $account | jq -r '.SUUID')
            TCP1_PORT=$(echo $account | jq -r '.TCP1_PORT')
            TCP2_PORT=$(echo $account | jq -r '.TCP2_PORT')
            UDP_PORT=$(echo $account | jq -r '.UDP_PORT')
            HOST=$(echo $account | jq -r '.HOST')
            ARGO_DOMAIN=$(echo $account | jq -r '.ARGO_DOMAIN')
            ARGO_AUTH=$(echo $account | jq -r '.ARGO_AUTH') 
            if sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no "$SSH_USER@$HOST" -q exit; then
              echo "🎉恭喜！✅第【$count】台服务器连接成功！🚀"   
              if [ -z "${ARGO_DOMAIN}" ]; then
                check_process="ps aux | grep '[c]onfig' > /dev/null && ps aux | grep [l]ocalhost:$TCP2_PORT > /dev/null"
              else
                check_process="ps aux | grep '[c]onfig' > /dev/null && ps aux | grep '[t]oken $ARGO_AUTH' > /dev/null"
              fi

              
              if ! sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no "$SSH_USER@$HOST" "$check_process" || [[ "$RES" =~ ^[Yy]$ ]]; then
                  echo "⚠️检测到主进程或者argo进程未启动，或者执行重置"
                  echo "⚠️现在开始修复或重置部署……请稍等"
                  echo "⚠️提示Error: Process completed with exit code 255中断并退出时，说明设置随机端口完成，请把RES设置为n再执行即可"
                  output=$(run_remote_command "$RES" "$SSH_USER" "$SSH_PASS" "${REALITY}" "$SUUID" "$TCP1_PORT" "$TCP2_PORT" "$UDP_PORT" "$HOST" "${ARGO_DOMAIN}" "${ARGO_AUTH}")
                  
                  if [[ "$ISSHOW" == "y" || "$ISSHOW" == "Y" ]]; then
                      echo "远程命令执行结果：$output"
                  else
                      echo "执行完成。"
                  fi
              else
                  echo "🎉恭喜！✅检测到所有进程正常运行中 "
                  echo "配置显示如下："
                  if [[ "$ISSHOW" == "y" || "$ISSHOW" == "Y" ]]; then
                      sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no "$SSH_USER@$HOST" \
                         "cat domains/\$(whoami).serv00.net/logs/list.txt; \
                          echo '===================================================='"
                  else
                      echo "执行完成。"
                  fi
              fi
            else
              echo "===================================================="
              echo "💥杯具！❌第【$count】台服务器连接失败！"
              echo "⚠️可能账号名、密码、服务器名称输入错误，或者当前服务器在维护中"  
              echo "===================================================="
            fi
          done
